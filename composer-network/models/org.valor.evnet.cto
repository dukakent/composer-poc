/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.valor.evnet

// abstract participant User identified by userId {
//   o String userId
//   o String name
//   --> EVCoinWallet wallet
// }

// asset EVCoinWallet identified by walletId {
//   o String walletId
//   o Double amount
// }

// participant ElectricitySupplier extends User {
//   o Integer power
//   o Integer pricing
// }
// participant ChargeStationOwner extends User {}
// participant Driver extends User {}

// participant ChargeStation identified by stationId {
//   o String stationId
//   o String name
//   o Integer power
//   o Integer pricing
//   --> ChargeStationOwner owner
//   --> ElectricitySupplier supplier
//   --> Car pluggedCar optional
// }

// participant Car identified by carId {
//   o String carId
//   o String name
//   --> Driver owner
// }

// transaction CreateDriver {
//   o String name
// }

// transaction CreateSupplier {
//   o String name
// }

// transaction CreateChargeStationOwner {
//   o String name
// }

// transaction ChargeCarStart {
//   --> ChargeStation station
// }

// transaction ChargeCarStop {
//   --> ChargeStation station
// }

// transaction ConsumeElectricityStart {
//   --> ChargeStation station
// }

// transaction ConsumeElectricityStop {
//   --> ChargeStation station
// }

participant ElectricityNode identified by nodeId {
  o String nodeId
  o Integer power
}

asset Wire identified by wireId {
  o String wireId
  o ElectricityNode supplier
  o ElectricityNode consumer
  o Boolean enabled
}

transaction ConsumeElectricityStart {
  --> Wire wire
}

transaction ConsumeElectricityStop {
  --> Wire wire
}
